DECLARE
CURSOR COU_RND_CURSOR IS 
SELECT * FROM COURSES;

CURSOR STU_RND_CURSOR IS 
SELECT * FROM STUDENTS;

V_COUNTER INTEGER :=0;
V_COUNTER2 INTEGER :=0; --FOR ID  USED IN  STUDENTS_ROUNDS TABLE
V_NUMBER_ATTEND NUMBER;
RND_PRICE_DIS NUMBER;
CRS_ID_NUM NUMBER;
V_START DATE;
V_END DATE;
V_NAME_DAY1 VARCHAR2(10);
V_NAME_DAY2 VARCHAR2(10);

BEGIN

--COURSES TABLE'S COLUMNS NAME (CRS_ID, CRS_NAME, CRS_HOURS, CRS_PRICE, RND_DAYS)
 FOR V_CURSOR IN  COU_RND_CURSOR LOOP --V_CURSOR IS ACTING LIKE A RECORD HOLDING ONE ROW AT A TIME FROM DATA IN COU_RND_CURSOR
         V_COUNTER:=V_COUNTER+1;
         V_NUMBER_ATTEND:=CALC_ATTEND(V_CURSOR.CRS_HOURS); --CALC_ATTEND IS FUNCTION USED TO RETURN NUMBER OF TIMES YOU NEED TO ATTEND IN THIS  COURSES
         
         FOR V_RECORD IN(SELECT * FROM TABLE (GET_DAY_NAME( V_CURSOR.RND_DAYS)))LOOP
             V_START:=CALC_START_DATE( V_RECORD.V_NAME_DAY1);--TAKE ONE PARAMETER NAME OF START DATE
             V_END:=CALC_END_DATE( V_RECORD.V_NAME_DAY1, V_RECORD.V_NAME_DAY2, V_NUMBER_ATTEND);--TAKE THREE PARAMETERS NAME OF START DATE ,NAME OF END DATE AND THE RETURN VALUE FROM CALC_ATTEND FUNCTION
         END LOOP;
        
         IF LOWER( V_CURSOR.CRS_NAME) LIKE LOWER('JAVA') THEN
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE*0.1;
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE-RND_PRICE_DIS;
                   CRS_ID_NUM:=V_CURSOR.CRS_ID;
         ELSIF LOWER( V_CURSOR.CRS_NAME) LIKE LOWER('PHP') THEN  
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE*0.2;
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE-RND_PRICE_DIS;
                   CRS_ID_NUM:=V_CURSOR.CRS_ID;  
        ELSE     --THEN IT WILL BE ORACLE
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE*0.3;
                   RND_PRICE_DIS:=V_CURSOR.CRS_PRICE-RND_PRICE_DIS;
                   CRS_ID_NUM:=V_CURSOR.CRS_ID;              
         
         END IF;
         INSERT INTO ROUNDS (RND_ID, RND_NAME, RND_START_DATE, RND_END_DATE, RND_PRICE, CRS_ID)
         VALUES(V_COUNTER,V_CURSOR.CRS_NAME||'_G1',V_START,V_END,RND_PRICE_DIS ,CRS_ID_NUM );
         
        
         --THIS LOOP FOR FILLING STUDENTS_ROUNDS TABLE
         --STUDENTS TABLE COLUMN (ST_ID, ST_NAME, ST_MOBILE, ST_ADDRESS)
         --STUDENTS ROUNDS COLUMN(ID, ST_ID, RND_ID, PAID_AMOUNT)
         FOR V_CURSOR1 IN STU_RND_CURSOR LOOP 
              V_COUNTER2:=V_COUNTER2+1;
              
             
              
             INSERT INTO STUDENTS_ROUNDS (ID, ST_ID, RND_ID, PAID_AMOUNT)
             VALUES(V_COUNTER2, V_CURSOR1.ST_ID,V_COUNTER,RND_PRICE_DIS );
         
         END LOOP;
 
 END LOOP;
 


END;
SELECT *
FROM ROUNDS;

SELECT *
FROM STUDENTS_ROUNDS;







